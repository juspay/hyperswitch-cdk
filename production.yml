AWSTemplateFormatVersion: '2010-09-09'

Resources:
  HyperswitchCDKBootstrapEC2:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT1H
    Properties:
      ImageId: 'ami-051f7e7f6c2f40dc1'
      InstanceType: 't3.small'
      IamInstanceProfile: !Ref InstanceProfile
      UserData:
        Fn::Base64: !Sub |
          #!/bin/sh
          curl -o run-cdk.sh https://raw.githubusercontent.com/juspay/hyperswitch-cdk/main/single-click.sh
          chmod a+x run-cdk.sh

          # export env variables
          export HYPERSWITCH_INSTALL_MODE="${HyperswitchInstallMode}"
          export AWS_STACK_NAME="${AWS::StackName}"
          export AWS_REGION="${AWS::Region}"
          export DB_PASS="${DBPassword}"
          export ADMIN_API_KEY="${AdminApiKey}"
          export MAILID="${MailId}"
          export NAME="${Name}"

          sh run-cdk.sh > /var/log/hyperswitch-script.log 2>&1
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --region ${AWS::Region} --resource HyperswitchCDKBootstrapEC2
          # delete the stack
          aws cloudformation delete-stack --stack-name ${AWS::StackName} --region ${AWS::Region}
      # NetworkInterfaces:
      #   - DeviceIndex: 0
      #     SubnetId: !If [UseCustomSubnet, !Ref CustomSubnetId, !Ref AWS::NoValue]
      #     GroupSet:
      #       - !GetAtt HyperswitchCDKBootstrapEC2SecurityGroup.GroupId
      #     AssociatePublicIpAddress: true
      # KeyName: 'hyps-oneclick'
  HyperswitchAwsEksAccessRole:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Sid: AllowEksAccess
            Effect: Allow
            Action:
              - eks:*
              - sts:GetCallerIdentity
            Resource: "*"
  AwsIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess
        - arn:aws:iam::aws:policy/AmazonRoute53FullAccess
        - arn:aws:iam::aws:policy/IAMReadOnlyAccess
        - !Ref HyperswitchAwsEksAccessRole
      Path: /
      Policies:
        - PolicyName: CdkPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - cloudformation:*
                Resource: '*'
                Effect: Allow
              - Condition:
                  ForAnyValue:StringEquals:
                    aws:CalledVia:
                      - cloudformation.amazonaws.com
                Action: '*'
                Resource: '*'
                Effect: Allow
              - Action: s3:*
                Resource: arn:aws:s3:::cdktoolkit-stagingbucket-*
                Effect: Allow
              - Action:
                  - sts:AssumeRole
                Effect: Allow
                Resource:
                  - arn:aws:iam::*:role/cdk-*
  InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref AwsIamRole
  HyperswitchCDKBootstrapEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !If [UseCustomVpc, !Ref CustomVpcId, !Ref AWS::NoValue]
      GroupDescription: Hyperswitch CDK Bootstrap Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

Conditions:
  UseCustomVpc: !Not [!Equals [!Ref CustomVpcId, ""]]
  UseCustomSubnet: !Not [!Equals [!Ref CustomSubnetId, ""]]

Parameters:
  HyperswitchInstallMode:
    Type: String
    Default: Enterprise
    AllowedValues:
      - Enterprise
    Description: Hyperswitch Enterprise Edition Mode
  CustomVpcId:
    Type: AWS::EC2::VPC::Id
    Default: ""
    Description: "(Optional) Select a VPC where the resources will be deployed. Leave blank to use default VPC (if you have one)."
  CustomSubnetId:
    Type: AWS::EC2::Subnet::Id
    Default: ""
    Description: "(Optional) Select a Subnet where the EC2 instance will be deployed. Leave blank to use default Subnet (if you have one)."
  DBPassword:
    Type: String
    Default: ""
    Description: "Please enter the password for your RDS instance: (Min 8 Character Needed [A-Z][a-z][0-9])"
  AdminApiKey:
    Type: String
    Default: ""
    Description: "Please enter the Admin api key (Required to access Hyperswitch APIs)"
  MailId:
    Type: String
    Default: ""
    Description: "Please enter the mail id (Your credentials will be mailed to this email. Please do not forget to subscribe to the mailing list when prompted)"
  Name:
    Type: String
    Default: ""
    Description: "Please enter the your name"