Resources:
  appvpc31CA2945:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: hyperswitch/app-vpc
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/Resource
  appvpcpublicsubnet1Subnet1SubnetFEA47093:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1a
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: hyperswitch/app-vpc/public-subnet-1Subnet1
      VpcId:
        Ref: appvpc31CA2945
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/public-subnet-1Subnet1/Subnet
  appvpcpublicsubnet1Subnet1RouteTable7D548588:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: hyperswitch/app-vpc/public-subnet-1Subnet1
      VpcId:
        Ref: appvpc31CA2945
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/public-subnet-1Subnet1/RouteTable
  appvpcpublicsubnet1Subnet1RouteTableAssociation7BC96EB4:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: appvpcpublicsubnet1Subnet1RouteTable7D548588
      SubnetId:
        Ref: appvpcpublicsubnet1Subnet1SubnetFEA47093
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/public-subnet-1Subnet1/RouteTableAssociation
  appvpcpublicsubnet1Subnet1DefaultRoute7A2E49EA:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: appvpcIGW7D07CE09
      RouteTableId:
        Ref: appvpcpublicsubnet1Subnet1RouteTable7D548588
    DependsOn:
      - appvpcVPCGW0F236DB6
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/public-subnet-1Subnet1/DefaultRoute
  appvpcpublicsubnet1Subnet1EIP63C3C907:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: hyperswitch/app-vpc/public-subnet-1Subnet1
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/public-subnet-1Subnet1/EIP
  appvpcpublicsubnet1Subnet1NATGatewayFE13728D:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - appvpcpublicsubnet1Subnet1EIP63C3C907
          - AllocationId
      SubnetId:
        Ref: appvpcpublicsubnet1Subnet1SubnetFEA47093
      Tags:
        - Key: Name
          Value: hyperswitch/app-vpc/public-subnet-1Subnet1
    DependsOn:
      - appvpcpublicsubnet1Subnet1DefaultRoute7A2E49EA
      - appvpcpublicsubnet1Subnet1RouteTableAssociation7BC96EB4
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/public-subnet-1Subnet1/NATGateway
  appvpcpublicsubnet1Subnet2Subnet0D244743:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1b
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: hyperswitch/app-vpc/public-subnet-1Subnet2
      VpcId:
        Ref: appvpc31CA2945
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/public-subnet-1Subnet2/Subnet
  appvpcpublicsubnet1Subnet2RouteTable142FAEAA:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: hyperswitch/app-vpc/public-subnet-1Subnet2
      VpcId:
        Ref: appvpc31CA2945
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/public-subnet-1Subnet2/RouteTable
  appvpcpublicsubnet1Subnet2RouteTableAssociation8ED59114:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: appvpcpublicsubnet1Subnet2RouteTable142FAEAA
      SubnetId:
        Ref: appvpcpublicsubnet1Subnet2Subnet0D244743
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/public-subnet-1Subnet2/RouteTableAssociation
  appvpcpublicsubnet1Subnet2DefaultRoute454FC4BC:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: appvpcIGW7D07CE09
      RouteTableId:
        Ref: appvpcpublicsubnet1Subnet2RouteTable142FAEAA
    DependsOn:
      - appvpcVPCGW0F236DB6
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/public-subnet-1Subnet2/DefaultRoute
  appvpcpublicsubnet1Subnet2EIP8AE85C60:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: hyperswitch/app-vpc/public-subnet-1Subnet2
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/public-subnet-1Subnet2/EIP
  appvpcpublicsubnet1Subnet2NATGateway9CF16758:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - appvpcpublicsubnet1Subnet2EIP8AE85C60
          - AllocationId
      SubnetId:
        Ref: appvpcpublicsubnet1Subnet2Subnet0D244743
      Tags:
        - Key: Name
          Value: hyperswitch/app-vpc/public-subnet-1Subnet2
    DependsOn:
      - appvpcpublicsubnet1Subnet2DefaultRoute454FC4BC
      - appvpcpublicsubnet1Subnet2RouteTableAssociation8ED59114
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/public-subnet-1Subnet2/NATGateway
  appvpcisolatedsubnet1Subnet1Subnet54C867C4:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1a
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: isolated-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: hyperswitch/app-vpc/isolated-subnet-1Subnet1
      VpcId:
        Ref: appvpc31CA2945
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/isolated-subnet-1Subnet1/Subnet
  appvpcisolatedsubnet1Subnet1RouteTableC6BE7C48:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: hyperswitch/app-vpc/isolated-subnet-1Subnet1
      VpcId:
        Ref: appvpc31CA2945
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/isolated-subnet-1Subnet1/RouteTable
  appvpcisolatedsubnet1Subnet1RouteTableAssociation0C34A74E:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: appvpcisolatedsubnet1Subnet1RouteTableC6BE7C48
      SubnetId:
        Ref: appvpcisolatedsubnet1Subnet1Subnet54C867C4
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/isolated-subnet-1Subnet1/RouteTableAssociation
  appvpcisolatedsubnet1Subnet1DefaultRouteA336FE94:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: appvpcpublicsubnet1Subnet1NATGatewayFE13728D
      RouteTableId:
        Ref: appvpcisolatedsubnet1Subnet1RouteTableC6BE7C48
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/isolated-subnet-1Subnet1/DefaultRoute
  appvpcisolatedsubnet1Subnet2SubnetD5DCFF99:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1b
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: isolated-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: hyperswitch/app-vpc/isolated-subnet-1Subnet2
      VpcId:
        Ref: appvpc31CA2945
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/isolated-subnet-1Subnet2/Subnet
  appvpcisolatedsubnet1Subnet2RouteTable4364446D:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: hyperswitch/app-vpc/isolated-subnet-1Subnet2
      VpcId:
        Ref: appvpc31CA2945
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/isolated-subnet-1Subnet2/RouteTable
  appvpcisolatedsubnet1Subnet2RouteTableAssociation3292EB04:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: appvpcisolatedsubnet1Subnet2RouteTable4364446D
      SubnetId:
        Ref: appvpcisolatedsubnet1Subnet2SubnetD5DCFF99
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/isolated-subnet-1Subnet2/RouteTableAssociation
  appvpcisolatedsubnet1Subnet2DefaultRouteA8A85DB0:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: appvpcpublicsubnet1Subnet2NATGateway9CF16758
      RouteTableId:
        Ref: appvpcisolatedsubnet1Subnet2RouteTable4364446D
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/isolated-subnet-1Subnet2/DefaultRoute
  appvpcdatabaseisolatedsubnet1Subnet1Subnet6FC88100:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1a
      CidrBlock: 10.0.4.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: database-isolated-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: hyperswitch/app-vpc/database-isolated-subnet-1Subnet1
      VpcId:
        Ref: appvpc31CA2945
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/database-isolated-subnet-1Subnet1/Subnet
  appvpcdatabaseisolatedsubnet1Subnet1RouteTable6C7E1D55:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: hyperswitch/app-vpc/database-isolated-subnet-1Subnet1
      VpcId:
        Ref: appvpc31CA2945
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/database-isolated-subnet-1Subnet1/RouteTable
  appvpcdatabaseisolatedsubnet1Subnet1RouteTableAssociationC48FF685:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: appvpcdatabaseisolatedsubnet1Subnet1RouteTable6C7E1D55
      SubnetId:
        Ref: appvpcdatabaseisolatedsubnet1Subnet1Subnet6FC88100
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/database-isolated-subnet-1Subnet1/RouteTableAssociation
  appvpcdatabaseisolatedsubnet1Subnet1DefaultRouteD219FFA5:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: appvpcpublicsubnet1Subnet1NATGatewayFE13728D
      RouteTableId:
        Ref: appvpcdatabaseisolatedsubnet1Subnet1RouteTable6C7E1D55
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/database-isolated-subnet-1Subnet1/DefaultRoute
  appvpcdatabaseisolatedsubnet1Subnet2SubnetDFC7DD24:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1b
      CidrBlock: 10.0.5.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: database-isolated-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: hyperswitch/app-vpc/database-isolated-subnet-1Subnet2
      VpcId:
        Ref: appvpc31CA2945
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/database-isolated-subnet-1Subnet2/Subnet
  appvpcdatabaseisolatedsubnet1Subnet2RouteTable838C11C6:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: hyperswitch/app-vpc/database-isolated-subnet-1Subnet2
      VpcId:
        Ref: appvpc31CA2945
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/database-isolated-subnet-1Subnet2/RouteTable
  appvpcdatabaseisolatedsubnet1Subnet2RouteTableAssociation2B5D3E03:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: appvpcdatabaseisolatedsubnet1Subnet2RouteTable838C11C6
      SubnetId:
        Ref: appvpcdatabaseisolatedsubnet1Subnet2SubnetDFC7DD24
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/database-isolated-subnet-1Subnet2/RouteTableAssociation
  appvpcdatabaseisolatedsubnet1Subnet2DefaultRouteBB622C86:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: appvpcpublicsubnet1Subnet2NATGateway9CF16758
      RouteTableId:
        Ref: appvpcdatabaseisolatedsubnet1Subnet2RouteTable838C11C6
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/database-isolated-subnet-1Subnet2/DefaultRoute
  appvpcIGW7D07CE09:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: hyperswitch/app-vpc
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/IGW
  appvpcVPCGW0F236DB6:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: appvpcIGW7D07CE09
      VpcId:
        Ref: appvpc31CA2945
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/VPCGW
  appvpcRestrictDefaultSecurityGroupCustomResource0A359118:
    Type: Custom::VpcRestrictDefaultSG
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E
          - Arn
      DefaultSecurityGroupId:
        Fn::GetAtt:
          - appvpc31CA2945
          - DefaultSecurityGroup
      Account:
        Ref: AWS::AccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/app-vpc/RestrictDefaultSecurityGroupCustomResource/Default
  CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Inline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:RevokeSecurityGroupEgress
                Resource:
                  - Fn::Join:
                      - ""
                      - - "arn:"
                        - Ref: AWS::Partition
                        - ":ec2:"
                        - Ref: AWS::Region
                        - ":"
                        - Ref: AWS::AccountId
                        - :security-group/
                        - Fn::GetAtt:
                            - appvpc31CA2945
                            - DefaultSecurityGroup
    Metadata:
      aws:cdk:path: hyperswitch/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role
  CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdkhsassets
        S3Key: 7f18a11296f35510ee16538afec983ed6312e12afbf81b777089a9f8e34e2474.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
          - Arn
      Runtime: nodejs18.x
      Description: Lambda function for removing all inbound/outbound rules from the VPC default security group
    DependsOn:
      - CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
    Metadata:
      aws:cdk:path: hyperswitch/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler
      aws:asset:path: asset.7f18a11296f35510ee16538afec983ed6312e12afbf81b777089a9f8e34e2474
      aws:asset:property: Code
  HyperswitchelasticacheSGD4F727DC:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: hyperswitch/Hyperswitch-elasticache-SG
      GroupName: Hyperswitch-elasticache-SG
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: appvpc31CA2945
    Metadata:
      aws:cdk:path: hyperswitch/Hyperswitch-elasticache-SG/Resource
  HyperswitchelasticacheSGfromhyperswitchHyperswitchec2SGA0DD43DE63797E25B267:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: from hyperswitchHyperswitchec2SGA0DD43DE:6379
      FromPort: 6379
      GroupId:
        Fn::GetAtt:
          - HyperswitchelasticacheSGD4F727DC
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - Hyperswitchec2SG673984F9
          - GroupId
      ToPort: 6379
    Metadata:
      aws:cdk:path: hyperswitch/Hyperswitch-elasticache-SG/from hyperswitchHyperswitchec2SGA0DD43DE:6379
  HSSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: Hyperswitch Elasticache subnet group
      SubnetIds:
        - Ref: appvpcpublicsubnet1Subnet1SubnetFEA47093
        - Ref: appvpcpublicsubnet1Subnet2Subnet0D244743
    Metadata:
      aws:cdk:path: hyperswitch/HSSubnetGroup
  HSCacheCluster:
    Type: AWS::ElastiCache::CacheCluster
    Properties:
      CacheNodeType: cache.t2.micro
      CacheSubnetGroupName:
        Ref: HSSubnetGroup
      ClusterName: hs-elasticache
      Engine: redis
      NumCacheNodes: 1
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - HyperswitchelasticacheSGD4F727DC
            - GroupId
    Metadata:
      aws:cdk:path: hyperswitch/HSCacheCluster
  HyperswitchdbSG3CDBCC59:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: hyperswitch/Hyperswitch-db-SG
      GroupName: Hyperswitch-db-SG
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: from 0.0.0.0/0:5432
          FromPort: 5432
          IpProtocol: tcp
          ToPort: 5432
      VpcId:
        Ref: appvpc31CA2945
    Metadata:
      aws:cdk:path: hyperswitch/Hyperswitch-db-SG/Resource
  HyperswitchdbSGfromhyperswitchLambdaSecurityGroup74AB09855432E076E7DD:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: from hyperswitchLambdaSecurityGroup74AB0985:5432
      FromPort: 5432
      GroupId:
        Fn::GetAtt:
          - HyperswitchdbSG3CDBCC59
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - LambdaSecurityGroup0BD9FC99
          - GroupId
      ToPort: 5432
    Metadata:
      aws:cdk:path: hyperswitch/Hyperswitch-db-SG/from hyperswitchLambdaSecurityGroup74AB0985:5432
  HyperswitchdbSGfromhyperswitchHyperswitchec2SGA0DD43DE543243630B1E:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: from hyperswitchHyperswitchec2SGA0DD43DE:5432
      FromPort: 5432
      GroupId:
        Fn::GetAtt:
          - HyperswitchdbSG3CDBCC59
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - Hyperswitchec2SG673984F9
          - GroupId
      ToPort: 5432
    Metadata:
      aws:cdk:path: hyperswitch/Hyperswitch-db-SG/from hyperswitchHyperswitchec2SGA0DD43DE:5432
  hypersdbmasterusersecret5E17603B:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Database master user credentials
      Name: hypers-db-master-user-secret
      SecretString: '{"dbname":"hyperswitch","username":"db_user","password":"dbpassword"}'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/hypers-db-master-user-secret/Resource
  hypersdbmasterusersecretAttachment8A7B789A:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: hypersdbmasterusersecret5E17603B
      TargetId:
        Ref: hyperswitchdbcluster6AFB6EE5
      TargetType: AWS::RDS::DBCluster
    Metadata:
      aws:cdk:path: hyperswitch/hypers-db-master-user-secret/Attachment/Resource
  hyperswitchdbclusterSubnets565E6E0C:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for hyperswitch-db-cluster database
      SubnetIds:
        - Ref: appvpcpublicsubnet1Subnet1SubnetFEA47093
        - Ref: appvpcpublicsubnet1Subnet2Subnet0D244743
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-db-cluster/Subnets/Default
  hyperswitchdbcluster6AFB6EE5:
    Type: AWS::RDS::DBCluster
    Properties:
      CopyTagsToSnapshot: true
      DBClusterParameterGroupName: default.aurora-postgresql13
      DBSubnetGroupName:
        Ref: hyperswitchdbclusterSubnets565E6E0C
      DatabaseName: hyperswitch
      Engine: aurora-postgresql
      EngineVersion: "13.7"
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: hypersdbmasterusersecret5E17603B
            - :SecretString:password::}}
      MasterUsername:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: hypersdbmasterusersecret5E17603B
            - :SecretString:username::}}
      Port: 5432
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - HyperswitchdbSG3CDBCC59
            - GroupId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-db-cluster/Resource
  hyperswitchdbclusterWriterInstance3FFAF9E3:
    Type: AWS::RDS::DBInstance
    Properties:
      DBClusterIdentifier:
        Ref: hyperswitchdbcluster6AFB6EE5
      DBInstanceClass: db.t3.medium
      Engine: aurora-postgresql
      PromotionTier: 0
      PubliclyAccessible: true
    DependsOn:
      - appvpcpublicsubnet1Subnet1DefaultRoute7A2E49EA
      - appvpcpublicsubnet1Subnet1RouteTableAssociation7BC96EB4
      - appvpcpublicsubnet1Subnet2DefaultRoute454FC4BC
      - appvpcpublicsubnet1Subnet2RouteTableAssociation8ED59114
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch-db-cluster/Writer Instance/Resource
  RDSLambdaRole66909C26:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: hyperswitch/RDSLambdaRole/Resource
  RDSLambdaRoleDefaultPolicy11180193:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ec2:AttachNetworkInterface
              - ec2:CreateNetworkInterface
              - ec2:DeleteNetworkInterface
              - ec2:DescribeNetworkInterfaces
              - ec2:DetachNetworkInterface
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - s3:GetObject
              - secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              - "*"
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - :s3:::hyperswitch-bucket/*
        Version: "2012-10-17"
      PolicyName: RDSLambdaRoleDefaultPolicy11180193
      Roles:
        - Ref: RDSLambdaRole66909C26
    Metadata:
      aws:cdk:path: hyperswitch/RDSLambdaRole/DefaultPolicy/Resource
  LambdaSecurityGroup0BD9FC99:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: hyperswitch/LambdaSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: appvpc31CA2945
    Metadata:
      aws:cdk:path: hyperswitch/LambdaSecurityGroup/Resource
  InitializeDBFunction8BD8FF23:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: hyperswitch-bucket
        S3Key: migration_runner.zip
      Environment:
        Variables:
          DB_SECRET_ARN:
            Ref: hypersdbmasterusersecret5E17603B
          SCHEMA_BUCKET: hyperswitch-bucket
          SCHEMA_FILE_KEY: schema.sql
      Handler: index.db_handler
      Role:
        Fn::GetAtt:
          - RDSLambdaRole66909C26
          - Arn
      Runtime: python3.9
      Timeout: 900
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - LambdaSecurityGroup0BD9FC99
              - GroupId
        SubnetIds:
          - Ref: appvpcisolatedsubnet1Subnet1Subnet54C867C4
          - Ref: appvpcisolatedsubnet1Subnet2SubnetD5DCFF99
          - Ref: appvpcdatabaseisolatedsubnet1Subnet1Subnet6FC88100
          - Ref: appvpcdatabaseisolatedsubnet1Subnet2SubnetDFC7DD24
    DependsOn:
      - appvpcdatabaseisolatedsubnet1Subnet1DefaultRouteD219FFA5
      - appvpcdatabaseisolatedsubnet1Subnet1RouteTableAssociationC48FF685
      - appvpcdatabaseisolatedsubnet1Subnet2DefaultRouteBB622C86
      - appvpcdatabaseisolatedsubnet1Subnet2RouteTableAssociation2B5D3E03
      - appvpcisolatedsubnet1Subnet1DefaultRouteA336FE94
      - appvpcisolatedsubnet1Subnet1RouteTableAssociation0C34A74E
      - appvpcisolatedsubnet1Subnet2DefaultRouteA8A85DB0
      - appvpcisolatedsubnet1Subnet2RouteTableAssociation3292EB04
      - RDSLambdaRoleDefaultPolicy11180193
      - RDSLambdaRole66909C26
    Metadata:
      aws:cdk:path: hyperswitch/InitializeDBFunction/Resource
  InitializeDBFunctionCurrentVersion6A89862F609670d17cf8239f03bcc4fb66ff06be:
    Type: AWS::Lambda::Version
    Properties:
      FunctionName:
        Ref: InitializeDBFunction8BD8FF23
    DependsOn:
      - appvpcdatabaseisolatedsubnet1Subnet1DefaultRouteD219FFA5
      - appvpcdatabaseisolatedsubnet1Subnet1RouteTableAssociationC48FF685
      - appvpcdatabaseisolatedsubnet1Subnet2DefaultRouteBB622C86
      - appvpcdatabaseisolatedsubnet1Subnet2RouteTableAssociation2B5D3E03
      - appvpcisolatedsubnet1Subnet1DefaultRouteA336FE94
      - appvpcisolatedsubnet1Subnet1RouteTableAssociation0C34A74E
      - appvpcisolatedsubnet1Subnet2DefaultRouteA8A85DB0
      - appvpcisolatedsubnet1Subnet2RouteTableAssociation3292EB04
    Metadata:
      aws:cdk:path: hyperswitch/InitializeDBFunction/CurrentVersion/Resource
  InitializeDBTrigger:
    Type: Custom::Trigger
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - AWSCDKTriggerCustomResourceProviderCustomResourceProviderHandler97BECD91
          - Arn
      HandlerArn:
        Ref: InitializeDBFunctionCurrentVersion6A89862F609670d17cf8239f03bcc4fb66ff06be
      InvocationType: Event
      Timeout: "900000"
      ExecuteOnHandlerChange: true
    DependsOn:
      - hyperswitchdbcluster6AFB6EE5
      - hyperswitchdbclusterSubnets565E6E0C
      - hyperswitchdbclusterWriterInstance3FFAF9E3
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: hyperswitch/InitializeDBTrigger/Default/Default
  AWSCDKTriggerCustomResourceProviderCustomResourceProviderRoleE18FAF0A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Inline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - Fn::Join:
                      - ""
                      - - Fn::GetAtt:
                            - InitializeDBFunction8BD8FF23
                            - Arn
                        - :*
    Metadata:
      aws:cdk:path: hyperswitch/AWSCDK.TriggerCustomResourceProviderCustomResourceProvider/Role
  AWSCDKTriggerCustomResourceProviderCustomResourceProviderHandler97BECD91:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdkhsassets
        S3Key: 30d27607a2f6a97cb964228693797269365769d596600286bcb294bbb3b1844d.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - AWSCDKTriggerCustomResourceProviderCustomResourceProviderRoleE18FAF0A
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - AWSCDKTriggerCustomResourceProviderCustomResourceProviderRoleE18FAF0A
    Metadata:
      aws:cdk:path: hyperswitch/AWSCDK.TriggerCustomResourceProviderCustomResourceProvider/Handler
      aws:asset:path: asset.30d27607a2f6a97cb964228693797269365769d596600286bcb294bbb3b1844d
      aws:asset:property: Code
  Hyperswitchec2SG673984F9:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: hyperswitch/Hyperswitch-ec2-SG
      GroupName: Hyperswitch-ec2-SG
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: from 0.0.0.0/0:80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          Description: from 0.0.0.0/0:22
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      VpcId:
        Ref: appvpc31CA2945
    Metadata:
      aws:cdk:path: hyperswitch/Hyperswitch-ec2-SG/Resource
  Hyperswitchec2keypair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: Hyperswitch-ec2-keypair
    Metadata:
      aws:cdk:path: hyperswitch/Hyperswitch-ec2-keypair
  hyperswitchInstanceRole2F509248:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: Name
          Value: hyperswitch/hyperswitch
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch/InstanceRole/Resource
  hyperswitchInstanceProfile0E7C5733:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: hyperswitchInstanceRole2F509248
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch/InstanceProfile
  hyperswitch895CB1FC:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: us-east-1a
      IamInstanceProfile:
        Ref: hyperswitchInstanceProfile0E7C5733
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t3.medium
      KeyName: Hyperswitch-ec2-keypair
      SecurityGroupIds:
        - Fn::GetAtt:
            - Hyperswitchec2SG673984F9
            - GroupId
      SubnetId:
        Ref: appvpcpublicsubnet1Subnet1SubnetFEA47093
      Tags:
        - Key: Name
          Value: hyperswitch/hyperswitch
      UserData:
        Fn::Base64:
          Fn::Join:
            - ""
            - - |-
                #!/bin/bash

                sudo yum update -y
                sudo yum install docker -y
                sudo service docker start
                sudo usermod -a -G docker ec2-user

                docker pull juspaydotin/hyperswitch-router:beta

                curl https://raw.githubusercontent.com/juspay/hyperswitch/v1.55.0/config/development.toml > production.toml
                cat << EOF >> .env
                ROUTER__REDIS__HOST=
              - Fn::GetAtt:
                  - HSCacheCluster
                  - RedisEndpoint.Address
              - |-

                ROUTER__MASTER_DATABASE__HOST=
              - Fn::GetAtt:
                  - hyperswitchdbcluster6AFB6EE5
                  - Endpoint.Address
              - |-

                ROUTER__REPLICA_DATABASE__HOST=
              - Fn::GetAtt:
                  - hyperswitchdbcluster6AFB6EE5
                  - Endpoint.Address
              - |-

                ROUTER__SERVER__HOST=0.0.0.0
                ROUTER__MASTER_DATABASE__USERNAME=db_user
                ROUTER__MASTER_DATABASE__PASSWORD=dbpassword
                ROUTER__MASTER_DATABASE__DBNAME=hyperswitch
                ROUTER__SERVER__BASE_URL=$(curl ifconfig.me)
                ROUTER__SECRETS__ADMIN_API_KEY=test_admin
                EOF

                docker run --env-file .env -p 80:8080 -v `pwd`/:/local/config juspaydotin/hyperswitch-router:beta ./router -f /local/config/production.toml
    DependsOn:
      - hyperswitchInstanceRole2F509248
    Metadata:
      aws:cdk:path: hyperswitch/hyperswitch/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31STW/bMAz9Lb0rWtr1sGvjbkUwYDWSINeBlllPjS0FIpUiMPzfS/lz6IoBBvj4SJOPpO707fper2/gjVamPK1qW+h2z2BOSqjfLZo73R7PRmUv7phnKo9Fbc0+Fg45cQva+ch4gKLGhV+4ByJvLLD1bk5O4Ps2T+YX8BMwvsFV5cFeBC6Ft44xCJ4SBiWj98Ci9U+DjtUeTQyWr0/Bx3Ov4b/E1lUBiRL/E6852KC2jhicwaHrgDuFNRBbI21Qt/Noc9EsBbI6kqjsFKEJyNSAgwqDrLL3x+YJDeYAoUL+S/yc8DHSqVCSbh+BoQCaGqkPIh43/xBTZu8s09BXvYnmhLyRaspCo9udH27W29zLffslL2j6Ow/+xdZSpIamKEG3P6Iz00lnfMRAIzfCrlM7JB9DWq2o8s3iStvPQ9LsYksZQJ4OsjzJyroq5T9HPkdWHGwlKyZ9GEAvGQI0OE6deVfapKhTzpeoX+nL5fablm9980rWrkJ0bBvUu8G+AyOpu1QLAwAA
    Metadata:
      aws:cdk:path: hyperswitch/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  VPCid:
    Value:
      Ref: appvpc31CA2945
  Hyperswitchec2IP:
    Description: try health api
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - hyperswitch895CB1FC
              - PublicIp
          - /health
Parameters:
  SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

